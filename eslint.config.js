import stylistic from '@stylistic/eslint-plugin';

/** @type {import('eslint').Linter.Config[]} */
export default [
    {
        files: ['browser/entry/global.js'],
        languageOptions: { globals: { window: true } }
    },
    {
        files: ['cli/**', 'browser/compile.js'],
        languageOptions: { globals: { Bun: 'readonly', fetch: 'readonly', process: 'readonly' } }
    },
    {
        files: ['src/wasm/**'],
        languageOptions: { globals: { TextEncoder: 'readonly', TextDecoder: 'readonly', WebAssembly: 'readonly' } }
    },
    {
        files: ['src/env/fetch.js'],
        languageOptions: { globals: { Buffer: 'readonly', process: 'readonly' } }
    },
    {
        files: ['src/wasm/direct.js'],
        languageOptions: { globals: { Buffer: 'readonly', crypto: 'readonly', process: 'readonly' } }
    },
    {
        files: ['src/wasm/bytes.js'],
        languageOptions: { globals: { Buffer: 'readonly', atob: 'readonly' } }
    },
    {
        files: ['src/env/globals.js'],
        languageOptions: { globals: { process: 'readonly', Deno: 'readonly' } }
    },
    {
        files: ['src/util.js'],
        languageOptions: { globals: { fetch: 'readonly', process: 'readonly' } }
    },
    {
        languageOptions: {
            globals: {
                clearInterval: 'readonly',
                clearTimeout: 'readonly',
                console: 'readonly',
                setInterval: 'readonly',
                setTimeout: 'readonly',
                URL: 'readonly',
                URLSearchParams: 'readonly'
            }
        }
    },
    {
        ignores: ['browser/build', 'dist', 'node_modules', 'tests']
    },
    {
        rules: {
            'array-callback-return': 'error',
            'arrow-body-style': ['error', 'as-needed'],
            'block-scoped-var': 'error',
            'camelcase': 'error',
            'consistent-this': ['error', 'that'],
            'constructor-super': 'error',
            'default-case-last': 'error',
            'default-param-last': 'error',
            'dot-notation': 'error',
            'eqeqeq': 'error',
            'for-direction': 'error',
            'func-names': 'error',
            'func-style': ['error', 'expression'],
            'getter-return': 'error',
            'no-alert': 'error',
            'no-array-constructor': 'error',
            'no-async-promise-executor': 'error',
            'no-await-in-loop': 'error',
            'no-caller': 'error',
            'no-case-declarations': 'error',
            'no-class-assign': 'error',
            'no-cond-assign': 'error',
            'no-const-assign': 'error',
            'no-constant-binary-expression': 'error',
            'no-constant-condition': 'error',
            'no-constructor-return': 'error',
            'no-control-regex': 'error',
            'no-debugger': 'error',
            'no-delete-var': 'error',
            'no-dupe-args': 'error',
            'no-dupe-class-members': 'error',
            'no-dupe-else-if': 'error',
            'no-dupe-keys': 'error',
            'no-duplicate-case': 'error',
            'no-duplicate-imports': 'error',
            'no-else-return': 'error',
            'no-empty': ['error', { 'allowEmptyCatch': true }],
            'no-empty-character-class': 'error',
            'no-empty-pattern': 'error',
            'no-empty-static-block': 'error',
            'no-eq-null': 'error',
            'no-eval': 'error',
            'no-ex-assign': 'error',
            'no-extend-native': 'error',
            'no-extra-bind': 'error',
            'no-extra-boolean-cast': 'error',
            'no-extra-label': 'error',
            'no-fallthrough': 'error',
            'no-func-assign': 'error',
            'no-global-assign': 'error',
            'no-import-assign': 'error',
            'no-implicit-globals': 'error',
            'no-implied-eval': 'error',
            'no-inner-declarations': 'error',
            'no-invalid-regexp': 'error',
            'no-invalid-this': 'error',
            'no-irregular-whitespace': 'error',
            'no-iterator': 'error',
            'no-label-var': 'error',
            'no-labels': 'error',
            'no-lone-blocks': 'error',
            'no-lonely-if': 'error',
            'no-loop-func': 'error',
            'no-loss-of-precision': 'error',
            'no-misleading-character-class': 'error',
            'no-multi-assign': 'error',
            'no-multi-str': 'error',
            'no-negated-condition': 'error',
            'no-new': 'error',
            'no-new-func': 'error',
            'no-new-wrappers': 'error',
            'no-new-native-nonconstructor': 'error',
            'no-nonoctal-decimal-escape': 'error',
            'no-obj-calls': 'error',
            'no-octal': 'error',
            'no-octal-escape': 'error',
            'no-proto': 'error',
            'no-prototype-builtins': 'error',
            'no-redeclare': 'error',
            'no-regex-spaces': 'error',
            'no-script-url': 'error',
            'no-self-assign': 'error',
            'no-self-compare': 'error',
            'no-sequences': 'error',
            'no-setter-return': 'error',
            'no-shadow': 'error',
            'no-shadow-restricted-names': 'error',
            'no-sparse-arrays': 'error',
            'no-template-curly-in-string': 'error',
            'no-this-before-super': 'error',
            'no-throw-literal': 'error',
            'no-unassigned-vars': 'error',
            'no-undef-init': 'error',
            'no-undef': 'error',
            'no-undefined': 'error',
            'no-underscore-dangle': 'error',
            'no-unexpected-multiline': 'error',
            'no-unmodified-loop-condition': 'error',
            'no-unneeded-ternary': 'error',
            'no-unreachable': 'error',
            'no-unreachable-loop': 'error',
            'no-unsafe-finally': 'error',
            'no-unsafe-negation': 'error',
            'no-unsafe-optional-chaining': ['error', { 'disallowArithmeticOperators': true }],
            'no-unused-expressions': 'error',
            'no-unused-labels': 'error',
            'no-unused-private-class-members': 'error',
            'no-unused-vars': 'error',
            'no-use-before-define': 'error',
            'no-useless-assignment': 'error',
            'no-useless-backreference': 'error',
            'no-useless-call': 'error',
            'no-useless-computed-key': 'error',
            'no-useless-concat': 'error',
            'no-useless-constructor': 'error',
            'no-useless-escape': 'error',
            'no-useless-rename': 'error',
            'no-useless-return': 'error',
            'no-var': 'error',
            'no-void': 'error',
            'no-warning-comments': 'error',
            'no-with': 'error',
            'object-shorthand': ['error', 'always'],
            'operator-assignment': ['error', 'always'],
            'require-atomic-updates': 'error',
            'prefer-arrow-callback': 'error',
            'prefer-const': 'error',
            'prefer-exponentiation-operator': 'error',
            'prefer-named-capture-group': 'error',
            'prefer-numeric-literals': 'error',
            'prefer-object-has-own': 'error',
            'prefer-object-spread': 'error',
            'prefer-rest-params': 'error',
            'prefer-spread': 'error',
            'prefer-template': 'error',
            'require-yield': 'error',
            'symbol-description': 'error',
            'use-isnan': 'error',
            'valid-typeof': 'error',
            'yoda': 'error'
        }
    }, {
        plugins: { stylistic },
        rules: {
            'stylistic/arrow-spacing': 'error',
            'stylistic/block-spacing': ['error', 'always'],
            'stylistic/brace-style': ['error', '1tbs', { 'allowSingleLine': true }],
            'stylistic/comma-dangle': ['error', 'never'],
            'stylistic/comma-style': ['error', 'last'],
            'stylistic/indent': ['error', 4],
            'stylistic/key-spacing': ['error', { 'beforeColon': false }],
            'stylistic/no-extra-semi': 'error',
            'stylistic/no-mixed-spaces-and-tabs': 'error',
            'stylistic/no-multi-spaces': 'error',
            'stylistic/no-multiple-empty-lines': ['error', { 'max': 1 }],
            'stylistic/no-tabs': 'error',
            'stylistic/object-curly-spacing': ['error', 'always'],
            'stylistic/quotes': ['error', 'single']
        }
    }
]